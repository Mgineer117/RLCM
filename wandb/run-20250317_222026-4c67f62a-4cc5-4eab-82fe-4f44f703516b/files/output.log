[36;1mSaving config:
[0m
{
    "K_epochs":	5,
    "action_dim":	2,
    "actor_dim":	[
        64,
        64
    ],
    "actor_lr":	0.0001,
    "algo_name":	"ppo",
    "critic_dim":	[
        128,
        128
    ],
    "critic_lr":	0.0003,
    "device":	"cpu",
    "entropy_scaler":	0.001,
    "episode_len":	200,
    "eps":	0.2,
    "eval_episodes":	10,
    "eval_num":	10,
    "gae":	0.95,
    "gamma":	0.99,
    "gpu_idx":	0,
    "group":	"03-17_22-20-24.867974-3d17",
    "load_pretrained_model":	false,
    "log_interval":	50,
    "logdir":	"log/train_log/03-17_22-20-24.867974-3d17",
    "minibatch_size":	64,
    "name":	"ppo-pvtol-3d17-seed:1825",
    "num_minibatch":	8,
    "num_runs":	10,
    "project":	"Exp",
    "seed":	1825,
    "state_dim":	4,
    "target_kl":	0.02,
    "task":	"pvtol",
    "timesteps":	10000000.0,
    "use_cuda":	true
}
PPO Training (Timesteps):   0%|                                                                                                                                   | 4096/10000000.0 [00:02<1:40:27, 1658.34it/s]
Traceback (most recent call last):
  File "/home/minjae/Documents/Minjae/UIUC/Research/RL-CCMs/RLCM/main.py", line 62, in <module>
    run(args, seed, unique_id, exp_time)
  File "/home/minjae/Documents/Minjae/UIUC/Research/RL-CCMs/RLCM/main.py", line 42, in run
    trainer.train()
  File "/home/minjae/Documents/Minjae/UIUC/Research/RL-CCMs/RLCM/trainer/online_trainer.py", line 79, in train
    batch, sample_time = self.sampler.collect_samples(
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minjae/Documents/Minjae/UIUC/Research/RL-CCMs/RLCM/utils/sampler.py", line 158, in collect_samples
    memory = self.collect_trajectory(
             ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minjae/Documents/Minjae/UIUC/Research/RL-CCMs/RLCM/utils/sampler.py", line 246, in collect_trajectory
    a, metaData = policy(obs, deterministic=deterministic)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minjae/miniconda3/envs/rlcm/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minjae/miniconda3/envs/rlcm/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minjae/Documents/Minjae/UIUC/Research/RL-CCMs/RLCM/policy/ppo.py", line 74, in forward
    a, metaData = self.actor(obs, deterministic=deterministic)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minjae/miniconda3/envs/rlcm/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minjae/miniconda3/envs/rlcm/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minjae/Documents/Minjae/UIUC/Research/RL-CCMs/RLCM/policy/layers/ppo_networks.py", line 62, in forward
    dist = MultivariateNormal(loc=mu, covariance_matrix=covariance_matrix)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minjae/miniconda3/envs/rlcm/lib/python3.11/site-packages/torch/distributions/multivariate_normal.py", line 180, in __init__
    super().__init__(batch_shape, event_shape, validate_args=validate_args)
  File "/home/minjae/miniconda3/envs/rlcm/lib/python3.11/site-packages/torch/distributions/distribution.py", line 69, in __init__
    valid = constraint.check(value)
            ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minjae/miniconda3/envs/rlcm/lib/python3.11/site-packages/torch/distributions/constraints.py", line 578, in check
    sym_check = super().check(value)
                ^^^^^^^^^^^^^^^^^^^^
  File "/home/minjae/miniconda3/envs/rlcm/lib/python3.11/site-packages/torch/distributions/constraints.py", line 557, in check
    return torch.isclose(value, value.mT, atol=1e-6).all(-2).all(-1)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Exception ignored in atexit callback: <function _start_and_connect_service.<locals>.teardown_atexit at 0x7dc1d35c9e40>
Traceback (most recent call last):
  File "/home/minjae/miniconda3/envs/rlcm/lib/python3.11/site-packages/wandb/sdk/lib/service_connection.py", line 94, in teardown_atexit
    conn.teardown(hooks.exit_code)
  File "/home/minjae/miniconda3/envs/rlcm/lib/python3.11/site-packages/wandb/sdk/lib/service_connection.py", line 226, in teardown
    self._router.join()
  File "/home/minjae/miniconda3/envs/rlcm/lib/python3.11/site-packages/wandb/sdk/interface/router.py", line 75, in join
    self._thread.join()
  File "/home/minjae/miniconda3/envs/rlcm/lib/python3.11/threading.py", line 1119, in join
    self._wait_for_tstate_lock()
  File "/home/minjae/miniconda3/envs/rlcm/lib/python3.11/threading.py", line 1139, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt:
